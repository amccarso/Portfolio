["import json"]["d = {55: \"hello\", 'foo':77.7, 'bar':None, 'up is down':False, 'mylist':[1,3,5]}\n", "d"]["json.dumps(d)"]["with open('foo.json') as f:\n", "    myobj = json.load(f)\n", "\n", "with open('bar.json', 'w') as f:\n", "    json.dump(myobj,f,indent=3,sortkeys=True)"]["with open('temp.json','w') as f:\n", "    json.dump(d,f)"]["d2 = json.loads(json.dumps(d))\n", "d2"]["# Escape From Jupyter"]["with open('day08_DOC.ipynb') as f:\n", "    j = json.load(f)\n", "j.keys()"]["with open('temp.ipynb', 'w') as f:\n", "    json.dump(j,f)"]["for cell in j['cells']:\n", "    #print(type(cell), cell.keys)\n", "    #print( cell['cell_type'] )\n", "    #for cell in j['cells']:\n", "    print('# ' + '# '.join(cell['source']) )\n", "    break "]["# This should solve the exercise "]["def jup2py(jupfile):\n", "    #writes plain text python file [jupfile].py\n", "    j = json.load(jupfile)\n", "    filename = jupfile.name.replace('.ipynb','.py')\n", "    with open(filename, 'w') as f:\n", "        for cell in j['cells']:\n", "            json.dump(cell['source'],f)"]["with open('day09_DOC.ipynb') as d:\n", "          jup2py(d)"]["for cell in j['cells']:\n", "    print('# ' + '# '.join(cell['source']) )\n", "    break"]["import requests\n", "import json\n", "url0 = 'http://www.nhtsa.gov/webapi/api/Complaints/vehicle/modelyear/{}/make/{}/model/{}?format=json'\n", "year,make,model = '2005', 'Chevrolet', 'Cobalt'\n", "url = url0.format(year,make,model)\n", "s = requests.get(url).text\n", "complaints = json.loads(s)"]["type(complaints)"]["complaints['Message']"]["complaints['Count']"]["r = complaints['Results']\n", "r"]["r[0]"]["import requests\n", "import json\n", "url0 = 'http://www.nhtsa.gov/webapi/api/Complaints/vehicle/modelyear/{}/make/{}/model/{}?format=json'\n", "make,model = 'Hyundai','Sonata'\n", "\n", "d = {'count':[],'year':[]}\n", "for year in range(2000,2019):\n", "    url = url0.format(year,make,model)\n", "    print(str(year)+'\\r',end='')\n", "    s = requests.get(url).text  # a JSON string\n", "    complaints = json.loads(s)\n", "    d['count'].append(complaints['Count'])\n", "    d['year'].append(year)"]["import altair as alt\n", "alt.renderers.enable('notebook')\n", "import pandas as pd\n", "df = pd.DataFrame.from_dict(d)\n", "alt.Chart(df).mark_bar().encode( x='year:O', y='count')"]["import requests\n", "import json\n", "url0 = 'http://www.nhtsa.gov/webapi/api/Complaints/vehicle/modelyear/{}/make/{}/model/{}?format=json'\n", "\n", "make,model = 'Chevrolet','Cobalt'\n", "d = {'number of complaints':[],'model year':[]}\n", "for year in range(2000,2019):\n", "        url = url0.format(year,make,model)\n", "        print(str(year)+'\\r',end='')\n", "        s = requests.get(url).text  # a JSON string\n", "        complaints = json.loads(s)\n", "        d['number of complaints'].append(complaints['Count'])\n", "        d['model year'].append(year)"]["import altair as alt\n", "alt.renderers.enable('notebook')\n", "import pandas as pd\n", "df = pd.DataFrame.from_dict(d)\n", "alt.Chart(df,title=make+' '+model).mark_bar().encode( x='model year:O', y='number of complaints')"]["url0 = 'http://www.nhtsa.gov/webapi/api/Complaints/vehicle/modelyear/{}/make/{}/model/{}?format=json'\n", "\n", "make,model = 'Toyota','Highlander'\n", "d = {'number of complaints':[],'model year':[]}\n", "for year in range(2000,2019):\n", "        url = url0.format(year,make,model)\n", "        print(str(year)+'\\r',end='')\n", "        s = requests.get(url).text  # a JSON string\n", "        complaints = json.loads(s)\n", "        d['number of complaints'].append(complaints['Count'])\n", "        d['model year'].append(year)"]["alt.renderers.enable('notebook')\n", "\n", "df = pd.DataFrame.from_dict(d)\n", "alt.Chart(df,title=make+' '+model).mark_bar().encode( x='model year:O', y='number of complaints')"]["complaints['Results']"][]